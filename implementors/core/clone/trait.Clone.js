(function() {var implementors = {};
implementors["competitive"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/mod_int/mod_int/struct.ModInt.html\" title=\"struct competitive::mod_int::mod_int::ModInt\">ModInt</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,&nbsp;</span>","synthetic":false,"types":["competitive::mod_int::mod_int::ModInt"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/trait.NumAssign.html\" title=\"trait num_traits::NumAssign\">NumAssign</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/prime/struct.OsaK.html\" title=\"struct competitive::prime::OsaK\">OsaK</a>&lt;T&gt;","synthetic":false,"types":["competitive::prime::OsaK"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/graph2d/struct.Graph2D.html\" title=\"struct competitive::graph2d::Graph2D\">Graph2D</a>&lt;T&gt;","synthetic":false,"types":["competitive::graph2d::Graph2D"]},{"text":"impl&lt;W:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/graph/listgraph/struct.Edge.html\" title=\"struct competitive::graph::listgraph::Edge\">Edge</a>&lt;W&gt;","synthetic":false,"types":["competitive::graph::listgraph::Edge"]},{"text":"impl&lt;W:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/graph/listgraph/struct.ListGraph.html\" title=\"struct competitive::graph::listgraph::ListGraph\">ListGraph</a>&lt;W&gt;","synthetic":false,"types":["competitive::graph::listgraph::ListGraph"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"competitive/graph/listgraph/enum.Direction.html\" title=\"enum competitive::graph::listgraph::Direction\">Direction</a>","synthetic":false,"types":["competitive::graph::listgraph::Direction"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"competitive/graph/listgraph/enum.DfsResultType.html\" title=\"enum competitive::graph::listgraph::DfsResultType\">DfsResultType</a>","synthetic":false,"types":["competitive::graph::listgraph::DfsResultType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/graph/listgraph/struct.DfsResults.html\" title=\"struct competitive::graph::listgraph::DfsResults\">DfsResults</a>","synthetic":false,"types":["competitive::graph::listgraph::DfsResults"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/calc_comb/struct.Combination.html\" title=\"struct competitive::calc_comb::Combination\">Combination</a>","synthetic":false,"types":["competitive::calc_comb::Combination"]},{"text":"impl&lt;K:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structures/union_find/struct.UnionFind.html\" title=\"struct competitive::data_structures::union_find::UnionFind\">UnionFind</a>&lt;K&gt;","synthetic":false,"types":["competitive::data_structures::union_find::UnionFind"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structures/monoid/struct.Sum.html\" title=\"struct competitive::data_structures::monoid::Sum\">Sum</a>&lt;T&gt;","synthetic":false,"types":["competitive::data_structures::monoid::Sum"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structures/monoid/struct.Product.html\" title=\"struct competitive::data_structures::monoid::Product\">Product</a>&lt;T&gt;","synthetic":false,"types":["competitive::data_structures::monoid::Product"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structures/monoid/struct.Max.html\" title=\"struct competitive::data_structures::monoid::Max\">Max</a>&lt;T&gt;","synthetic":false,"types":["competitive::data_structures::monoid::Max"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structures/monoid/struct.Min.html\" title=\"struct competitive::data_structures::monoid::Min\">Min</a>&lt;T&gt;","synthetic":false,"types":["competitive::data_structures::monoid::Min"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structures/monoid/struct.XOR.html\" title=\"struct competitive::data_structures::monoid::XOR\">XOR</a>&lt;T&gt;","synthetic":false,"types":["competitive::data_structures::monoid::XOR"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"competitive/data_structures/dfs_tree/struct.DfsTree.html\" title=\"struct competitive::data_structures::dfs_tree::DfsTree\">DfsTree</a>","synthetic":false,"types":["competitive::data_structures::dfs_tree::DfsTree"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()